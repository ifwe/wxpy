import os
import sipconfig
import wxpyconfig
from path import path

from wxpyinterfaces import SIP_DIR, interface_files
import wxpyfeatures

SIP_WARNINGS = True
VERBOSE = True

if VERBOSE:
    def log(*a): print ' '.join(a)
else:
    def log(*a): pass


sip_opts = []
if SIP_WARNINGS:
    sip_opts.append('-w')
    

# The name of the SIP build file generated by SIP and used by the build system.
build_file = "wxpy.sbf"

output_dir = SIP_DIR / wxpyconfig.platform_name
output_dir.ensure_exists()

def run_sip(config):
    features = wxpyfeatures.emit_features_file(SIP_DIR / 'features.sip')
    for feature, enabled in features.iteritems():
        if not enabled:
            sip_opts.extend(['-x', feature])

    # Run SIP to generate the code.
    sip_invoke = ('%(sip_bin)s %(sip_opts)s -I%(sip_include_dir)s -c %(output_dir)s -b %(build_file)s %(interface_files)s'
              % dict(sip_bin    = config.sip_bin,
                     sip_include_dir = str(SIP_DIR),
                     sip_opts   = ' '.join(sip_opts),
                     output_dir = str(output_dir),
                     build_file = SIP_DIR / build_file,
                     interface_files = ' '.join(interface_files)))

    log(sip_invoke)
    os.system(sip_invoke)


def gen_makefile():
    # Get the SIP configuration information.
    config = sipconfig.Configuration()
    
    run_sip(config)

    # Create the Makefile in src.
    makefile = sipconfig.SIPModuleMakefile(config, build_file, dir = str(SIP_DIR))

    # Add the library we are wrapping.  The name doesn't include any platform
    # specific prefixes or extensions (e.g. the "lib" prefix on UNIX, or the
    # ".dll" extension on Windows).
    makefile.extra_libs = []
    makefile.extra_cxxflags = wxpyconfig.cxxflags
    makefile.extra_lflags   = wxpyconfig.lflags
    
    # Generate the Makefile itself.
    makefile.generate()
    
    # Create the parent makefile
    root_make = sipconfig.ParentMakefile(config, subdirs = [SIP_DIR])
    root_make.generate()

if __name__ == '__main__':
    gen_makefile()